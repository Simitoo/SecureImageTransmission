@page "/image-display"
@using Microsoft.AspNetCore.SignalR.Client
@using SecureImageTransmissionClient.Services
@inject SignalRService SignalRService

<h3>Generated Image</h3>

<div>
    <label>Width: </label>
    <input type="number" @bind="Width" />
</div>
<div>
    <label>Height: </label>
    <input type="number" @bind="Height" />
</div>
<div>
    <label>Image Format: </label>
    <select @bind="ImageFormat">
        <option value="png">PNG</option>
        <option value="jpeg">JPEG</option>
    </select>
</div>

<div>
    <button @onclick="StartGenerating">Start Generating</button>
    <button @onclick="StopGenerating">Stop Generating</button>
</div>

@if (Images.Count > 0)
{
    <ul>
        @foreach (var image in Images)
        {
            <li>
                <img src="@image" alt="generated image" style="max-width: 100px; max-height: 100px; margin: 5px;" />
            </li>
        }
    </ul>
}

@code {
    private int Width { get; set; } = 500;
    private int Height { get; set; } = 500;
    private string ImageFormat { get; set; } = "png";
    private List<string> Images { get; set; } = new List<string>();

    protected override async Task OnInitializedAsync()
    {

        SignalRService.OnImageReceived += (image) =>
        {
            Console.WriteLine($"Received image: {image.Substring(0, Math.Min(50, image.Length))}...");

            if (!string.IsNullOrEmpty(image))
            {
                Images.Insert(0, image);
                if (Images.Count > 5)
                {
                    Images.RemoveAt(Images.Count - 1);
                }
                StateHasChanged();
            }
            else
            {
                Console.WriteLine("Received empty image data!");
            }
        };

        await SignalRService.StartImageHubConnectionAsync();
    }

    private async Task StartGenerating()
    {
        await SignalRService.StartGenerateImageRequest(Width, Height, ImageFormat);
    }

    private async Task StopGenerating()
    {
        await SignalRService.StopGenerateImageRequest();
    }
}

